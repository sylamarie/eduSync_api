{
  "swagger": "2.0",
  "info": {
    "title": "EduSync API",
    "description": "API for managing a school's student information system. It allows authenticated staff to manage student records, courses, and enrollments.",
    "version": "1.0.0"
  },
  "host": "https://edusync-api-7p52.onrender.com",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "paths": {
    "/students/": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get all students",
        "description": "Retrieves a list of all students from the database.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "summary": "Create a new student",
        "description": "Adds a new student to the database. All fields are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Student data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Smith"
                },
                "email": {
                  "type": "string",
                  "example": "john.smith@example.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "2003-04-15T00:00:00.000+00:00"
                },
                "gender": {
                  "type": "string",
                  "example": "Female"
                },
                "country": {
                  "type": "string",
                  "example": "Philippines"
                },
                "enrolledCourse": {
                  "type": "string",
                  "example": "6886484583377811cd8dc385"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "tags": [
          "Students"
        ],
        "summary": "Get a single student by ID",
        "description": "Retrieves a single student based on their unique MongoDB document ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Student document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "summary": "Update an existing student",
        "description": "Updates the information for an existing student by their document ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Student document ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Student data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Smith"
                },
                "email": {
                  "type": "string",
                  "example": "john.smith@example.com"
                },
                "birthDate": {
                  "type": "string",
                  "example": "2003-04-15T00:00:00.000+00:00"
                },
                "gender": {
                  "type": "string",
                  "example": "Female"
                },
                "country": {
                  "type": "string",
                  "example": "Philippines"
                },
                "enrolledCourse": {
                  "type": "string",
                  "example": "6886484583377811cd8dc385"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "summary": "Delete a student",
        "description": "Deletes a student from the database by their document ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Student document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get all courses",
        "description": "Retrieves a list of all courses from the database.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "summary": "Create a new course",
        "description": "Adds a new course to the database. All fields are required.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Course data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseName": {
                  "type": "string",
                  "example": "SOFTWARE DEVELOPMENT"
                },
                "description": {
                  "type": "string",
                  "example": "Teaches coding, web/app development, and databases."
                },
                "programLength": {
                  "type": "string",
                  "example": "2 years"
                },
                "creditsRequired": {
                  "type": "number",
                  "example": 60
                },
                "deliveryMode": {
                  "type": "string",
                  "example": "Online"
                },
                "careerPath": {
                  "type": "array",
                  "example": [
                    "Software Developer",
                    "Web Developer",
                    "Database Administrator"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "summary": "Get a single course by ID",
        "description": "Retrieves a single course based on its unique MongoDB document ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Course document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "summary": "Update an existing course",
        "description": "Updates the information for an existing course by its document ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Course document ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Course data to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "courseName": {
                  "type": "string",
                  "example": "SOFTWARE DEVELOPMENT"
                },
                "description": {
                  "type": "string",
                  "example": "Teaches coding, web/app development, and databases with advanced topics."
                },
                "programLength": {
                  "type": "string",
                  "example": "2 years"
                },
                "creditsRequired": {
                  "type": "number",
                  "example": 60
                },
                "deliveryMode": {
                  "type": "string",
                  "example": "Online"
                },
                "careerPath": {
                  "type": "array",
                  "example": [
                    "Software Developer",
                    "Web Developer",
                    "Database Administrator",
                    "DevOps Engineer"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "summary": "Delete a course",
        "description": "Deletes a course from the database by its document ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Course document ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}